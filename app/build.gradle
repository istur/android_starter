plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    String APP = "app"
    String ENVIRONMENT = "environment"
    String SERVER_URL = "ServerUrl"
    String ENV_URL = "EnvUrl"
//    prefisso
    String PROTOCOL = "https://"
//    suffisso
    String API_RESOURCE = "/"
    String PROD_ENV = "istur_demo.com"
    String DEV_ENV = "192.168.1.10"


    defaultConfig {
        applicationId "com.istur.android_starter"
        minSdk 26
        targetSdk 31
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: 1
        versionName = System.getenv("VERSION_NAME") as String ?: "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions ENVIRONMENT
    productFlavors {
        dev {
            dimension ENVIRONMENT
            applicationIdSuffix '.dev'
            buildConfigField 'String', 'APP_ENVIRONMENT', '"dev"'
            buildConfigField 'int', 'APP_REMOTE_SERVICE_TIMEOUT', '100'
            ext {
                devServerUrl = PROTOCOL + DEV_ENV
                devEnvUrl = PROTOCOL + DEV_ENV + API_RESOURCE
            }
        }
        prod {
            dimension ENVIRONMENT
            buildConfigField 'String', 'APP_ENVIRONMENT', '"prod"'
            ext {
                prodServerUrl = PROTOCOL + PROD_ENV
                prodEnvUrl = PROTOCOL + PROD_ENV + API_RESOURCE
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${variant.name}-${variant.versionName}.${variant.versionCode}.apk"
            }
            // get merged flavor from variant
            def productFlavor = variant.productFlavors
            def environment = productFlavor[0]
            variant.resValue "string", "app_name", "Android Starter " + environment.name.toUpperCase()
            variant.buildConfigField "String", "APP_HOST_URL", "\"${environment[environment.name + SERVER_URL]}\""
            variant.buildConfigField "String", "APP_API_URL", "\"${environment[environment.name + ENV_URL]}\""
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        animationsDisabled = true
        unitTests {
            // in order to use android resources in robolectric
            includeAndroidResources = true

            returnDefaultValues = true
        }
        // Orchestrator it is useful to clean the activity state after each instrumentation test,
        // without it some test may fail due to dirty data from previous tests
        // FIXED IT using the AndroidX fragmentScenario and ActivityScenario
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {

    def room_version = "2.4.2"

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'joda-time:joda-time:2.10.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation "androidx.room:room-rxjava2:$room_version"
    //Dagger
    implementation 'com.google.dagger:dagger:2.27'
    implementation "com.google.dagger:dagger-android-support:2.27"
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    annotationProcessor 'androidx.room:room-compiler:2.4.2'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.7.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.0'
    //Butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
}